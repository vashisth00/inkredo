{"version":3,"sources":["brand.gif","config/firebase_config.js","contextUser.js","components/navigation.js","components/profile/photos.js","components/profile/likes.js","components/profile/profile.js","components/main/updates.js","components/main/sidebar.js","components/post/comments.js","components/post/tags.js","components/post/post.js","components/main/posts.js","components/main/main.js","components/upload/upload.js","components/auth/login.js","components/auth/register.js","components/view/view.js","components/error.js","components/search/results.js","components/search/search.js","components/settings/settings.js","components/auth/privateRoute.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","app","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firestore","settings","timestampsInSnapshots","ContextUser","createContext","Navigation","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","auth","signOut","then","context","actions","updateAuthLogged","error","alert","handleSubmit","e","preventDefault","input","value","history","push","concat","buttonsDisplay","logged","profile_link","state","react_default","a","createElement","Link","to","className","onClick","aria-haspopup","aria-controls","aria-hidden","id","role","redirect","_this2","aria-label","src","brand","alt","width","height","onSubmit","ref","placeholder","Component","contextType","WrappedNav","withRouter","Photos","photoslist","data","map","obj","index","link","key","image","Likes","likeslist","Profile","componentWillMount","database","username","once","snapshot","val","profile_pic","picture","setState","description","followers_num","following_num","updatesPhotos","updateLikedPhotos","orderByChild","equalTo","follow","posts_num","numChildren","entries","forEach","_ref","_ref2","slicedToArray","photos","toConsumableArray","snap","post","snaps","liked","handleTab","mode","tab_posts","classList","remove","tab_likes","add","handleFollow","on","transaction","undefined","match","params","Redirect","tab","likes","Updates","updateslist","last_update","moment","fromNow","style","padding","Sidebar","following","user","loading","styles","updates","Comments","commentslist","comment","Tags","tagslist","class","Post","componentDidMount","post_id","updatePost","updateRedirect","comments","_ref3","_ref4","tags","time","Date","toDateString","likes_num","like_num","handleLike","like","catch","console","log","handleDelete","window","confirm","child","render","handleSave","set","edit","handleEdit","handleEditChange","target","new_comment","displayLikesNum","displayPhotosDropdown","desc","rows","onChange","length","post_tags","display","type","Posts","postlist","Main","following_list","post_list","_this$state","sidebar","posts","Upload","i","filter","tag","handleAddition","handleDrag","currPos","newPos","newTags","slice","splice","handleChange","files","name","includes","file","reader","FileReader","onload","document","querySelector","setAttribute","result","innerText","readAsDataURL","handleUpload","extension","split","uuid","shortid","generate","new_name","upload_task","storage","put","progress","bytesTransferred","totalBytes","getDownloadURL","url","ServerValue","TIMESTAMP","max","ReactTags","delimiters","Login","signInWithEmailAndPassword","email","pass","displayName","uid","message","autoComplete","Register","updateLogged","createUserWithEmailAndPassword","updateProfile","registered","selected_username","View","bool","location","redirect_loc","Error","Results","resultslist","Search","check","q","query","prevProps","prevState","results","Settings","bio","handleUploadChange","pic_changed","handleBioChange","handleBioSave","profile","PrivateRoute","component","authenticated","rest","objectWithoutProperties","Route","assign","App","fetch","res","json","test","onAuthStateChanged","authUser","updateAuth","contextUser","Provider","navigation","Switch","exact","path","login","register","view","search","Boolean","hostname","ReactDOM","BrowserRouter","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.03bef42d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/brand.11bbafb3.gif\";","import firebase from 'firebase'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\nimport 'firebase/storage'\r\n\r\nvar config = {\r\n    apiKey: \"AIzaSyAlRpGQL-iX0UOv2Wssir2bIIKaYpPG-iw\",\r\n    authDomain: \"react-social-network-7e88b.firebaseapp.com\",\r\n    databaseURL: \"https://react-social-network-7e88b.firebaseio.com\",\r\n    projectId: \"react-social-network-7e88b\",\r\n    storageBucket: \"react-social-network-7e88b.appspot.com\",\r\n    messagingSenderId: \"906593123724\"\r\n};\r\n\r\nconst app = firebase.initializeApp(config);\r\nfirebase.firestore().settings({timestampsInSnapshots: true})\r\n\r\nexport {app}\r\n","import { createContext } from 'react'\r\n\r\nconst ContextUser = createContext()\r\n\r\nexport default ContextUser;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport {app} from \"../config/firebase_config\"\r\nimport ContextUser from '../contextUser'\r\nimport {withRouter} from 'react-router-dom'\r\nimport brand from '../brand.gif';\r\n\r\n// functional component which serves as the navigation bar\r\nclass Navigation extends Component {\r\n    static contextType = ContextUser;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            redirect: false,\r\n        }\r\n    }\r\n\r\n    handleClick = () => {\r\n        \r\n        app.auth().signOut().then(() => {\r\n            this.context.actions.updateAuthLogged(false, null, null)\r\n        }, function(error) {\r\n            alert('Sign Out Error', error);\r\n        });\r\n    }\r\n\r\n    handleSubmit = (e) => {           \r\n        e.preventDefault()\r\n        if(this.input.value) {\r\n            this.props.history.push(`/search/${this.input.value}`)\r\n        }\r\n    }\r\n\r\n    // determines which buttons should be displayed based off weather or not user is logged in\r\n    buttonsDisplay = (logged) => {\r\n        let profile_link = \"/u/\" + this.context.state.logged\r\n\r\n        // if not logged in, show sign up and login buttons\r\n        if(!logged) {\r\n            return (\r\n                <div>\r\n                    <Link to=\"/register\" className=\"button is-primary\"><strong>Sign up</strong></Link>\r\n                    <Link to=\"/login\" className=\"button is-light\">Log in</Link>\r\n                </div>\r\n            )\r\n        // if logged in, show upload, signout, and dropdown button which houses profile and settings link\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <Link to=\"/upload\" className=\"button is-primary\">Upload</Link>\r\n                    <Link to=\"/login\" onClick={this.handleClick} className=\"button is-light\">Sign out</Link>\r\n                    <div className=\"dropdown is-hoverable is-right\">\r\n                        <div className=\"dropdown-trigger\">\r\n                            <button className=\"button\" aria-haspopup=\"true\" aria-controls=\"dropdown-menu3\">\r\n                            <span className=\"icon is-small\">\r\n                                <i className=\"fas fa-angle-down\" aria-hidden=\"true\"></i>\r\n                            </span>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"dropdown-menu\" id=\"dropdown-menu3\" role=\"menu\">\r\n                            <div className=\"dropdown-content\">\r\n                            <Link to={profile_link}  className=\"dropdown-item\">\r\n                                My Profile\r\n                            </Link>\r\n                            <Link to=\"/settings\" className=\"dropdown-item\">\r\n                                Settings\r\n                            </Link>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    render() {\r\n        return(\r\n            <nav className=\"navbar is-fixed-top\" role=\"navigation\" aria-label=\"main navigation\">\r\n                <div className=\"navbar-brand\">\r\n                    <Link to=\"/\" className=\"navbar-item\">\r\n                    <img src={brand} alt=\"\" width=\"90\" height=\"30\"/>\r\n                    </Link>\r\n                </div>\r\n\r\n                <div className=\"navbar-start\" id=\"search-nav\">\r\n                    <div className=\"navbar-item\">\r\n                        <form onSubmit={this.handleSubmit}>\r\n                                <input ref={(input) => this.input = input} className=\"input\" placeholder=\"Search\" />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"navbar-end\">\r\n                    <div className=\"navbar-item\">\r\n                        <div className=\"buttons\">\r\n                        { this.buttonsDisplay(this.context.state.logged) }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </nav>\r\n            )\r\n        }\r\n    }\r\n\r\nconst WrappedNav = withRouter(Navigation)\r\nWrappedNav.contextType = ContextUser;\r\n\r\nexport default WrappedNav;","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\n// functional component to display uploaded photos in profile page\r\nconst Photos = (props) => {\r\n    // create liked uploaded photo elements from data passed as props\r\n    const photoslist = props.data.map((obj, index) => {\r\n        let link = \"/p/\" + obj.id\r\n        return (<div key={index} className=\"user-content image is-square\"><Link to={link}><img src={obj.image} alt=\"\"/></Link></div>\r\n        ) \r\n    })\r\n    \r\n\r\n    \r\n    return(\r\n        <div className=\"grid\">\r\n            {photoslist}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Photos;","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\n// functional component to display liked photos in profile page\r\nconst Likes = (props) => {\r\n    // create liked photo elements from data passed as props\r\n    const likeslist = props.data.map((obj, index) => {\r\n        let link = \"/p/\" + obj.id\r\n        return (<div key={index} className=\"user-content image is-square\"><Link to={link}><img src={obj.image} alt=\"\"/></Link></div>\r\n        ) \r\n    })\r\n    \r\n\r\n    \r\n    return(\r\n        <div className=\"grid\">\r\n            {likeslist}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Likes;","import React, { Component } from 'react';\r\nimport { app } from \"../../config/firebase_config\"\r\nimport { Redirect } from 'react-router-dom'\r\nimport Photos from './photos'\r\nimport Likes from './likes'\r\nimport ContextUser from '../../contextUser'\r\n\r\n//component for the profile page\r\nclass Profile extends Component {\r\n    static contextType = ContextUser;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            mode: \"posts\",\r\n            profile_pic: undefined,\r\n            username: props.match.params.username,\r\n            description: undefined,\r\n            posts_num: 0,\r\n            followers_num: 0,\r\n            following_num: 0,\r\n            follow: false,\r\n            photos: [],\r\n            liked: [],\r\n            redirect: false,\r\n        }\r\n    }\r\n\r\n\r\n    // Called immediately before mounting occurs, and before Component#render\r\n    componentWillMount = () => {\r\n        // check if the username exists in database\r\n        app.database().ref(`/profile/${this.state.username}`).once(\"value\", (snapshot) => {\r\n            if(snapshot.val()) {\r\n                let profile_pic = \"https://firebasestorage.googleapis.com/v0/b/react-social-network-7e88b.appspot.com/o/assets%2Fdefault.png?alt=media\"\r\n                    \r\n                if(snapshot.val().picture) {\r\n                    profile_pic = snapshot.val().picture\r\n                }\r\n\r\n                // update profile state information\r\n                this.setState({\r\n                    description: snapshot.val().description, \r\n                    followers_num: snapshot.val().followers_num,\r\n                    following_num: snapshot.val().following_num,\r\n                    profile_pic: profile_pic\r\n                })\r\n                this.updatesPhotos();\r\n                this.updateLikedPhotos();\r\n            } else {\r\n                // if not redirect to error page\r\n                this.setState({redirect: true})\r\n            }\r\n        });\r\n\r\n        // check if you are following this profile, if so.. toggle follow state\r\n        app.database().ref(`/profile/${this.context.state.logged}/following`).orderByChild('username').equalTo(this.state.username).once(\"value\", (snapshot) => {\r\n            if(snapshot.val()) {\r\n                this.setState({follow: true})\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    // retrieve users uploaded photos\r\n    updatesPhotos = () => {\r\n        app.database().ref(`/posts`).orderByChild('username').equalTo(this.state.username).once(\"value\", (snapshot) => {\r\n            if(snapshot.val()) {\r\n                // update posts number\r\n                this.setState({posts_num: snapshot.numChildren()})\r\n\r\n                // for each photo object, insert the objects key inside itself as a key value pair,\r\n                // then, append object to photos array state\r\n                Object.entries(snapshot.val()).forEach(([key, val]) => {\r\n                    val.id = key\r\n\r\n                    this.setState({photos: [...this.state.photos, val]})\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    // retrieve all photos that were liked from logged user\r\n    updateLikedPhotos = () => {\r\n        app.database().ref(`/profile/${this.state.username}/liked`).once(\"value\", (snapshot) => {\r\n            if(snapshot.val()) {\r\n\r\n                // for each photo object, append to photos array state\r\n                snapshot.forEach(snap => {\r\n                    app.database().ref(`/posts/${snap.val().post}`).once(\"value\", (snaps) => {\r\n                        if(snaps.val()) {\r\n                            let value = {id: snap.val().post, image: snaps.val().image}\r\n                            this.setState({liked: [...this.state.liked, value]})\r\n                        }\r\n                    })\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    // handles the click event on posts/liked tab, toggles which should be shown\r\n    handleTab = () => {\r\n        if(this.state.mode == \"posts\") {\r\n            this.tab_posts.classList.remove(\"is-active\")\r\n            this.tab_likes.classList.add(\"is-active\")\r\n            this.setState({mode: \"likes\"})\r\n        } \r\n        \r\n        else if(this.state.mode == \"likes\") {\r\n            this.tab_likes.classList.remove(\"is-active\")\r\n            this.tab_posts.classList.add(\"is-active\")\r\n            this.setState({mode: \"posts\"})\r\n        }\r\n    }\r\n\r\n\r\n\r\n    // handles the click event on the follow button, toggles between follow / unfollow\r\n    handleFollow = () => {\r\n        // user must be logged in to follow/unfolow\r\n        if(!this.context.state.logged) {\r\n            alert(\"You must be logged in to do that.\")\r\n            return\r\n          }\r\n\r\n        // if logged in user is not following the profile\r\n        if(!this.state.follow) {\r\n            // follow the profile user; add them to logged users following list \r\n            app.database().ref(`/profile/${this.context.state.logged}/following`).push({\r\n                username: this.state.username\r\n            }).then(() => {\r\n                // then increment following num\r\n                app.database().ref(`/profile/${this.context.state.logged}/following_num`).transaction((value) => {\r\n                    return value + 1;\r\n                  });\r\n                // and set follow to true\r\n                this.setState({\r\n                    follow: true,\r\n                    followers_num: this.state.followers_num + 1})\r\n            })\r\n\r\n            // add logged user to profile users follwers list\r\n            app.database().ref(`/profile/${this.state.username}/followers`).push({\r\n                username: this.context.state.logged\r\n            }).then(() => {\r\n                // then increment followers num.\r\n                app.database().ref(`/profile/${this.state.username}/followers_num`).transaction((value) => {\r\n                    return value + 1;\r\n                  });\r\n            })\r\n        }\r\n\r\n        // if logged in user is following the profile\r\n        else {\r\n            // unfollow the profile user;\r\n            app.database().ref(`/profile/${this.context.state.logged}/following`).orderByChild('username').equalTo(this.state.username).on(\"child_added\", (snapshot) => {\r\n                if(snapshot.val()) {\r\n                    // remove them from logged users following list\r\n                    if(snapshot.val().username === this.state.username) {\r\n                        snapshot.ref.remove()\r\n                        // then decrement following num\r\n                        app.database().ref(`/profile/${this.context.state.logged}/following_num`).transaction((value) => {\r\n                            return value - 1;\r\n                          });\r\n                        // and set following to false\r\n                        this.setState({\r\n                        follow: false,\r\n                        followers_num: this.state.followers_num - 1})\r\n                    }\r\n                }\r\n            })\r\n\r\n            //remove logged user from profile users follwers list\r\n            app.database().ref(`/profile/${this.state.username}/followers`).orderByChild('username').equalTo(this.context.state.logged).on(\"child_added\", (snapshot) => {\r\n                if(snapshot.val()) {\r\n                    if(snapshot.val().username === this.context.state.logged) {\r\n                        snapshot.ref.remove()\r\n                        // then decrement followers num\r\n                        app.database().ref(`/profile/${this.state.username}/followers_num`).transaction((value) => {\r\n                            return value - 1;\r\n                          });\r\n                        }\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    \r\n    render() {\r\n        if(this.state.redirect) {\r\n            return <Redirect to=\"/error\"/>\r\n        } else {\r\n        return(\r\n            <div className=\"profile\">\r\n            <div className=\"card\">\r\n                <header className=\"card-header\">\r\n                    <figure className=\"image profile-avatar\">\r\n                        <img className=\"is-rounded\" src={this.state.profile_pic} alt=\"\"/>\r\n                    </figure>\r\n                    <div className=\"card-header-content profile-info\">\r\n                        <h1 className=\"title\">{this.state.username}</h1>\r\n                        <div className=\"stats\">\r\n                            <ul>\r\n                                <li><span className=\"post_num\">{this.state.posts_num}</span> posts</li>\r\n                                <li><span className=\"follower_num\">{this.state.followers_num}</span> followers</li>\r\n                                <li><span className=\"following_num\">{this.state.following_num}</span> following</li>\r\n                            </ul>\r\n                        </div>\r\n                        <p>\r\n                        {this.state.description}\r\n                        </p>\r\n                        <div className=\"profile-options\">\r\n                        {this.state.follow ? \r\n                            <button onClick={this.handleFollow} className=\"button is-primary is-small\">Unfollow</button>\r\n                            :\r\n                            <button onClick={this.handleFollow} className=\"button is-primary is-outline is-small\">Follow</button>\r\n                        }\r\n                        </div>\r\n                    </div>\r\n\r\n                </header>\r\n                <div className=\"card-content\">\r\n                    <div className=\"tabs is-centered\">\r\n                        <ul>\r\n                        <li ref={(tab) => this.tab_posts = tab} className=\"tab-posts is-active\" onClick={this.handleTab}><a>Posts</a></li>\r\n                        <li ref={(tab) => this.tab_likes = tab} className=\"tab-likes\" onClick={this.handleTab}><a>Liked</a></li>\r\n                        </ul>\r\n                    </div>\r\n                    {this.state.mode == \"posts\" ? <Photos data={this.state.photos}/> : <Likes data={this.state.liked}/> }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            )\r\n    }\r\n}\r\n}\r\n\r\nProfile.contextType = ContextUser;\r\n\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport * as moment from 'moment'\r\n\r\n// functional component for sidebar component in main page\r\nconst Updates = (props) => {\r\n    // create Update elements from data passed as props\r\n    const updateslist = props.data.map((obj, index) => {\r\n        let last_update = obj.last_update != undefined ? moment(obj.last_update).fromNow() : \"never\"\r\n\r\n        return (<tr key={index}>\r\n            <td>\r\n                <div className=\"media\">\r\n                    <figure className=\"image is-32x32\">\r\n                    <img src={obj.profile_pic} alt=\"\"/>\r\n                    </figure>\r\n                    <div className=\"media-right\">\r\n                        <Link to={`/u/${obj.username}`}>{obj.username}</Link>\r\n                    </div>\r\n                </div>\r\n            </td>\r\n            <td>{last_update}</td>\r\n        </tr>)\r\n    })\r\n\r\n\r\n\r\n    return(\r\n        <div className=\"updates\">\r\n            <div className=\"panel-block\" style={{padding: 0 + \"px\"}}>\r\n            <table className=\"table is-striped is-fullwidth\">\r\n                <tbody>\r\n                {props.data == 0 && (\r\n                    <tr><td className=\"has-text-centered\">There are no updates</td></tr>)\r\n                }\r\n\r\n                {updateslist}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Updates;","import React, { Component } from 'react';\r\nimport Updates from './updates'\r\nimport {app} from \"../../config/firebase_config\"\r\n\r\n// side bar component for main page\r\nclass Sidebar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: [],\r\n            loading: true\r\n        }\r\n    }\r\n\r\n\r\n\r\n    // Called immediately before mounting occurs, and before Component#render\r\n    componentWillMount = () => { \r\n        // for each user being followed,\r\n        this.props.following.forEach((user) => {\r\n            // find their profile information\r\n            app.database().ref(`/profile/${user}`).once(\"value\", (snapshot) => {\r\n                if(snapshot.val()) {  \r\n                    let profile_pic = \"https://firebasestorage.googleapis.com/v0/b/react-social-network-7e88b.appspot.com/o/assets%2Fdefault.png?alt=media\"\r\n                    \r\n                    if(snapshot.val().picture) {\r\n                        profile_pic = snapshot.val().picture\r\n                    }\r\n\r\n                    let value = {\r\n                        profile_pic: profile_pic,\r\n                        username: snapshot.key,\r\n                        last_update: snapshot.val().last_update}\r\n                    // add that information to the list of updates\r\n                    this.setState({data: [...this.state.data, value]})\r\n                }\r\n            })\r\n        })\r\n        // now component can be loaded\r\n        this.setState({loading: false})\r\n    }\r\n\r\n\r\n    \r\n    render() {\r\n        if(this.state.loading) {\r\n            return null\r\n        } else {\r\n            return(\r\n                <div className=\"sidebar\">\r\n                    <nav className=\"panel\" styles=\"background-color: white;\">\r\n                        <p className=\"panel-heading has-text-centered\">\r\n                            Updates\r\n                        </p>\r\n                        <Updates data={this.state.data}/>\r\n                    </nav>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Sidebar;","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\n// functional component to display all commments of a photo\r\nconst Comments = (props) => {\r\n\r\n    // create comments elements from data passed as props\r\n    const commentslist = props.data.map((obj, index) => {\r\n        let link = \"/u/\" + obj.username\r\n        return (<li key={index}><span className=\"comment-username\"><Link to={link}>{obj.username}</Link></span> <span className=\"comment\">{obj.comment}</span></li>) \r\n    })\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"comments\">\r\n            <ul>\r\n                {commentslist}\r\n            </ul>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Comments;","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\n// functional component to display all commments of a photo\r\nconst Tags = (props) => {\r\n\r\n    // create comments elements from data passed as props\r\n    const tagslist = props.data.map((obj, index) => {\r\n        return (<span class=\"tag\">{obj}</span>\r\n        ) \r\n    })\r\n\r\n    return (\r\n        <div className=\"tags\">\r\n            {tagslist}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Tags;","import React, { Component } from 'react';\r\nimport {app } from \"../../config/firebase_config\"\r\nimport { Redirect, Link } from 'react-router-dom'\r\nimport Comments from './comments'\r\nimport ContextUser from '../../contextUser'\r\nimport Tags from './tags'\r\n\r\n// component to display a photo post\r\nclass Post extends Component {\r\n    static contextType = ContextUser;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: undefined,\r\n            profile_pic: undefined,\r\n            time: undefined,\r\n            description: undefined,\r\n            edit: false,\r\n            post_id: props.post_id,\r\n            image: undefined,\r\n            tags: [],\r\n            comments: [],\r\n            likes_num: 0,\r\n            liked: false,\r\n            render: true,\r\n        }\r\n    }\r\n\r\n\r\n    // Called immediately after a component is mounted. Setting state here will trigger re-rendering.\r\n    componentDidMount = () => {\r\n        // retrieve post data for post id\r\n        app.database().ref(`/posts/${this.state.post_id}`).once('value', (snapshot) => {\r\n            // if it exists, update states for post\r\n            if(snapshot.val()) {\r\n                this.updatePost(snapshot);\r\n            // if not redirect to error page\r\n            } else {\r\n                this.props.updateRedirect(true, \"error\")\r\n            }\r\n        }).then(() => {\r\n            app.database().ref(`/profile/${this.state.username}`).once(\"value\", (snapshot) => {\r\n                if(snapshot.val()) {\r\n                    if(snapshot.val().picture) {\r\n                        this.setState({profile_pic: snapshot.val().picture})\r\n                    } else {\r\n                        this.setState({profile_pic: \"https://firebasestorage.googleapis.com/v0/b/react-social-network-7e88b.appspot.com/o/assets%2Fdefault.png?alt=media\"})\r\n                    }\r\n                }\r\n            })\r\n    })\r\n\r\n        // check if logged user had liked the image\r\n        app.database().ref(`/posts/${this.state.post_id}/liked`).orderByChild('username').equalTo(this.context.state.logged).once(\"value\", (snapshot) => {\r\n            // if they did, set liked state to true, which will toggle the like button\r\n            if(snapshot.val()) {\r\n            this.setState({liked: true})\r\n            } \r\n        });\r\n\r\n        // retrieve the comments for the post\r\n        let commentsref = app.database().ref(`/comments/${this.state.post_id}`);\r\n        commentsref.once(\"value\", (snapshot) => {\r\n            if(snapshot.val()) {\r\n                Object.entries(snapshot.val()).forEach(([key, val]) => {\r\n                    this.setState({comments: [...this.state.comments, val]})\r\n                });\r\n            } \r\n        });\r\n\r\n        // retrieve tags for the post\r\n        app.database().ref(`/posts/${this.state.post_id}/tags`).once('value', (snapshot) => {\r\n            if(snapshot.val()) {\r\n                Object.entries(snapshot.val()).forEach(([key, val]) => {\r\n                    this.setState({tags: [...this.state.tags, val]})\r\n                });\r\n            } \r\n        });\r\n    }\r\n\r\n\r\n\r\n    // updates post states from database if it exists\r\n    updatePost = (snapshot) => {\r\n        this.setState({\r\n            username: snapshot.val().username,\r\n            description: snapshot.val().description,\r\n            time: new Date(snapshot.val().time).toDateString(),\r\n            image: snapshot.val().image,\r\n            likes_num: snapshot.val().like_num\r\n        })\r\n    }\r\n\r\n\r\n\r\n    // handles click event for like/unlike button\r\n    handleLike = () => {\r\n\r\n        // only authenticated useres can like a photo\r\n        if(!this.context.state.logged) {\r\n            alert(\"You must be logged in to do that.\")\r\n            return\r\n        }\r\n\r\n      // if button click, and state is not initailly liked,\r\n        if(!this.state.liked) {\r\n            let likeref = app.database().ref(`/posts/${this.state.post_id}/liked`)\r\n        \r\n            // like the post by setting a like variable with the logged users name as value in database.\r\n            likeref.push({\r\n            username: this.context.state.logged\r\n        }).then((snap) => {\r\n            // increment the posts like num\r\n            app.database().ref(`/posts/${this.state.post_id}/like_num`).transaction((like) => {\r\n                return like + 1;\r\n            });\r\n\r\n            // set the posts like state to true\r\n            this.setState({liked: true, likes_num: this.state.likes_num + 1})\r\n            // add a reference to the liked image to the logged users profile account\r\n            app.database().ref(`/profile/${this.context.state.logged}/liked`).push({post: this.state.post_id})\r\n        }).catch(error => {\r\n            console.log(error)\r\n        })\r\n\r\n        // if button click, and state is  initailly liked\r\n        } else {\r\n            app.database().ref(`/posts/${this.state.post_id}/liked`).orderByChild('username').equalTo(this.context.state.logged).once(\"value\", (snapshot) => {\r\n                if(snapshot.val()) {\r\n                    snapshot.forEach((snap) => {\r\n                        if(snap.val().username === this.state.username) {\r\n                            snap.ref.remove()\r\n                            app.database().ref(`/posts/${this.state.post_id}/like_num`).transaction((like) => {\r\n                                return like - 1;\r\n                            });\r\n                            this.setState({liked: false, likes_num: this.state.likes_num - 1})\r\n\r\n                            app.database().ref(`/profile/${this.context.state.logged}/liked`).orderByChild('post').equalTo(this.state.post_id).once(\"value\", (snapshot) => {\r\n                                if(snapshot.val()) {\r\n                                    snapshot.forEach((snap) => {\r\n                                        if(snap.val().post == this.state.post_id) {\r\n                                            snap.ref.remove()\r\n                                            return\r\n                                        }\r\n                                    })\r\n                                }\r\n                            })\r\n                            return\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n\r\n    // handles the deletion of a post\r\n    handleDelete = () => {\r\n        let input = window.confirm(\"Are you sure you want to delete this photo?\")\r\n\r\n        if(input) {\r\n            app.database().ref(`/posts`).child(this.state.post_id).remove().then(() => {\r\n            alert(\"Photo deleted!\")\r\n            this.setState({render: false})\r\n            })\r\n        }\r\n\r\n        if(this.props.updateRedirect) {\r\n            this.props.updateRedirect(true, \"profile\")\r\n        }\r\n    }\r\n\r\n\r\n\r\n    // handles the edit save of a post\r\n    handleSave = () => {\r\n        app.database().ref(`/posts/${this.state.post_id}/description`).set(this.state.description).then(() => {\r\n            this.setState({edit: false})\r\n            alert(\"saved\")\r\n        }).catch((error) => {\r\n            alert(error)\r\n        })\r\n    }\r\n\r\n\r\n\r\n    // handle the click event on edit button\r\n    handleEdit = () => {\r\n        this.setState({edit: true})\r\n    }\r\n\r\n\r\n\r\n    // handles whatever description change\r\n    handleEditChange = (e) => {\r\n        this.setState({description: e.target.value})\r\n    }\r\n\r\n\r\n\r\n    // handles the submssion of a comment\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(!this.context.state.logged) {\r\n            alert(\"You must be logged in to do that.\")\r\n            return\r\n        }\r\n        \r\n        app.database().ref(`/comments`).child(this.state.post_id).push({\r\n            username: this.context.state.logged,\r\n            comment: this.input.value\r\n        }).then((snap) => {\r\n            let new_comment = {username: this.context.state.logged, comment: this.input.value}\r\n            this.setState({comments: [...this.state.comments, new_comment]})\r\n\r\n            this.input.value = \"\"\r\n        }).catch(error => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n\r\n\r\n    // determines noun form of likes\r\n    displayLikesNum = () => {\r\n      if(this.state.likes_num == 1) {\r\n        return <span className=\"likes-num\">{this.state.likes_num} <label>like</label></span>\r\n      } else {\r\n        return <span className=\"likes-num\">{this.state.likes_num} <label>likes</label></span>\r\n      }\r\n    }\r\n\r\n\r\n\r\n    // determines weather or not to display the edit/delete dropdown.\r\n    displayPhotosDropdown = () => {\r\n      // display only if the user owns the image\r\n      if(this.state.username == this.context.state.logged) {\r\n        return (   \r\n          <div className=\"dropdown is-hoverable is-right is-small photo-dropdown\">\r\n          <div className=\"dropdown-trigger\">\r\n              <button className=\"button\" aria-haspopup=\"true\" aria-controls=\"dropdown-menu3\">\r\n              <span className=\"icon is-small\" style={{height: 0 + \"px\"}}>\r\n                  <i className=\"fas fa-angle-down\" aria-hidden=\"true\"></i>\r\n              </span>\r\n              </button>\r\n          </div>\r\n          <div className=\"dropdown-menu\" id=\"dropdown-menu3\" role=\"menu\">\r\n              <div className=\"dropdown-content\">\r\n              <a onClick={this.handleEdit} className=\"dropdown-item\">\r\n                  Edit\r\n              </a>\r\n              <a onClick={this.handleDelete} className=\"dropdown-item\">\r\n                  Delete\r\n              </a>\r\n\r\n              </div>\r\n          </div>\r\n      </div>\r\n        )\r\n      } else {\r\n        return null\r\n      }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n      if(this.state.redirect) {\r\n        return <Redirect to=\"/error\"/>\r\n      } else {\r\n        if(this.state.render) {\r\n            return (\r\n                <div className=\"post\">\r\n                <div className=\"card\">\r\n                <header>\r\n                  <div className=\"media is-fullwidth\">\r\n                    <figure className=\"image is-48x48\">\r\n                      <img src={this.state.profile_pic} alt=\"\"/>\r\n                    </figure>\r\n                    <p className=\"card-header-title content-username\">\r\n                      <Link to={`/u/${this.state.username}`}>{this.state.username}</Link>\r\n                    </p>\r\n                    <Link target=\"_blank\" to={\"/p/\".concat(`${this.state.post_id}`)}><button className=\"button is-light is-small is-pulled-right share\">Share</button></Link> \r\n                    \r\n                    {this.displayPhotosDropdown()}\r\n\r\n                  </div>\r\n                </header>\r\n          \r\n                <div className=\"card-image\">\r\n                  <figure className=\"image\">\r\n                    <img src={this.state.image} alt=\"\"/>\r\n                  </figure>\r\n                </div>\r\n                <div className=\"card-content\">\r\n                  <div className=\"content\">\r\n                    <div className=\"content-options\">\r\n                      {this.state.liked ? <button onClick={this.handleLike} className=\"button is-danger is-small\">Unlike</button>\r\n                      :\r\n                      <button onClick={this.handleLike} className=\"button is-danger is-outlined is-small\">Like</button>\r\n                      }\r\n                      {this.state.likes_num > 0 && <span className=\"likes-num\">{this.state.likes_num} <label>likes</label></span>}\r\n                    <time className=\"content-time\">{this.state.time}</time>\r\n                    </div>\r\n                    \r\n                    <div className=\"content-body\"  ref={(desc) => this.desc = desc}>\r\n                    {\r\n                      this.state.edit ? (\r\n                        <div>\r\n                          <textarea class='textarea' rows='1' onChange={this.handleEditChange}>{this.state.description}</textarea>\r\n                          <div class=\"field is-grouped edit-buttons\">\r\n                            <p class=\"control\">\r\n                              <button class='button is-primary is-small' onClick={this.handleSave}>Save</button>\r\n                            </p>\r\n                            <p class=\"control\">\r\n                              <button class='button is-primary is-small' onClick={() => this.setState({edit: false})}>Cancel</button>\r\n                              </p>\r\n                          </div>\r\n                      </div>\r\n                      ) : \r\n                      (this.state.description)\r\n                    }\r\n\r\n\r\n                    {this.state.tags.length != 0 && <Tags data={this.state.tags} />}\r\n\r\n                    </div>\r\n                      <hr/>\r\n                      {this.context.state.logged && <Comments data={this.state.comments}/>}\r\n\r\n                    <form onSubmit={this.handleSubmit} style={{display: this.context.state.logged ? 'block' : 'none' }}>\r\n                      <div className=\"field has-addons\">\r\n                        <div className=\"control is-expanded\">\r\n                          <input ref={(input) => this.input = input} className=\"input\" type=\"text\" placeholder=\"Add a comment\" />\r\n                        </div>\r\n                        <div className=\"control\">\r\n                          <button className=\"button is-primary\" type=\"submit\">\r\n                          Submit\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </form>\r\n    \r\n                  </div>\r\n                </div>\r\n                </div>\r\n                </div>\r\n        );\r\n        } else {\r\n          return null\r\n        }\r\n      }\r\n    }\r\n}\r\n\r\nPost.contextType = ContextUser;\r\n\r\nexport default Post;","import React from 'react';\r\nimport Post from '../post/post'\r\n\r\nconst Posts = (props) => {\r\n    // create Post elements from data passed as props\r\n    const postlist = props.data.map((obj, index) => {\r\n        return (<Post key={index} post_id={obj}/>) \r\n    })\r\n\r\n    return (\r\n        <div className=\"posts\">\r\n            {props.data == 0 && <p>There are no posts.</p>}\r\n            {postlist}\r\n        </div>\r\n    )\r\n}\r\nexport default Posts;","import React, { Component } from 'react';\r\nimport { app } from \"../../config/firebase_config\"\r\nimport Sidebar from './sidebar'\r\nimport Posts from './posts'\r\nimport ContextUser from '../../contextUser'\r\n\r\n// component for the main page\r\nclass Main extends Component {\r\n    static contextType = ContextUser;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loading: true,\r\n            following_list: [],\r\n            post_list: []\r\n        }\r\n    }\r\n\r\n\r\n    // Called immediately after a component is mounted. Setting state here will trigger re-rendering.\r\n    componentDidMount = () => {\r\n        // retrieve list of followed users\r\n        app.database().ref(`/profile/${this.context.state.logged}/following`).once(\"value\", (snapshot) => {\r\n            if(snapshot.val()) {\r\n                snapshot.forEach((snap) => {\r\n                    this.setState({following_list: [...this.state.following_list, snap.val().username]})\r\n                })\r\n                // then retrieve all of the followered users posts\r\n                this.state.following_list.forEach((user) => {\r\n                    app.database().ref(`/posts`).orderByChild('username').equalTo(user).once(\"value\", (snapshot) => {\r\n                        if(snapshot.val()) {\r\n                            snapshot.forEach((snap) => {\r\n                                this.setState({post_list: [...this.state.post_list, snap.key]})\r\n                            })\r\n                        } \r\n                    })\r\n                })\r\n                // once done fetching, now the component can be rendered\r\n                this.setState({loading: false})\r\n            } else {\r\n                this.setState({loading: false})\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const {following_list, post_list, loading} = this.state\r\n\r\n        if(loading) {\r\n            return <div>loading...</div>;\r\n        } else {\r\n            return(\r\n                <div className=\"main\">\r\n                    <div className=\"grid-container\">\r\n                        <Sidebar following={following_list}/>\r\n                        <Posts data={post_list}/>\r\n                    </div>            \r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nMain.contextType = ContextUser;\r\n\r\nexport default Main;","import React, { Component } from 'react';\r\nimport {app} from \"../../config/firebase_config\"\r\nimport firebase from \"firebase\"\r\nimport shortid from 'shortid'\r\nimport { Redirect } from 'react-router-dom'\r\nimport ContextUser from '../../contextUser'\r\nimport { WithContext as ReactTags } from 'react-tag-input';\r\n\r\n// component for the upload page\r\nclass Upload extends Component {\r\n    static contextType = ContextUser;\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            file: null,\r\n            uuid: undefined,\r\n            tags: [],\r\n            redirect: false,\r\n            progress: false,\r\n        }\r\n    }\r\n\r\n    handleDelete = (i) => {\r\n        const { tags } = this.state;\r\n        this.setState({\r\n         tags: tags.filter((tag, index) => index !== i),\r\n        });\r\n    }\r\n \r\n    handleAddition = (tag) => {\r\n        this.setState(state => ({ tags: [...state.tags, tag] }));\r\n    }\r\n \r\n    handleDrag = (tag, currPos, newPos) => {\r\n        const tags = [...this.state.tags];\r\n        const newTags = tags.slice();\r\n \r\n        newTags.splice(currPos, 1);\r\n        newTags.splice(newPos, 0, tag);\r\n \r\n        // re-render\r\n        this.setState({ tags: newTags });\r\n    }\r\n\r\n    // handles file selection change\r\n    handleChange = (e) => {\r\n        // if a file was selected\r\n        if(e.target.files) {\r\n            let type = e.target.files[0].type\r\n            let name = e.target.files[0].name   \r\n\r\n            // only accept files that are images\r\n            if (type.includes(\"image\")) {\r\n                this.setState({file: e.target.files[0]})\r\n\r\n                var reader = new FileReader();\r\n                \r\n                // once loaded, change profile pic \r\n                reader.onload = (e) => {\r\n                    document.querySelector(\"#preview\").setAttribute('src', e.target.result)\r\n                    document.querySelector(\".file-name\").innerText = name\r\n\r\n                };\r\n                reader.readAsDataURL(e.target.files[0]);\r\n            } else {\r\n                alert(\"File must be a picture. Try again\")\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    // handles file upload\r\n    handleUpload = (e) => {\r\n        if(this.state.file) {\r\n            let image = this.state.file\r\n            let extension = image.type.split('/')[1]\r\n\r\n            // generate a unique identifier for photo\r\n            let uuid = shortid.generate()\r\n\r\n            let new_name = uuid + '.' + extension\r\n            let upload_task = app.storage().ref(`/images/${this.context.state.logged}/${new_name}`).put(image)\r\n\r\n            // set progress to true to make progress bar appear\r\n            this.setState({progress: true})\r\n\r\n            // listener for upload progress\r\n            upload_task.on('state_changed', (snapshot) => {\r\n                // update progress value through reference\r\n                this.progress.value = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n            },(error) => {\r\n                console.log(error)\r\n            }, () => {\r\n                \r\n                // upload the image to storage\r\n                app.storage().ref(`images/${this.context.state.logged}`).child(new_name).getDownloadURL().then((url) => {\r\n                    let description = document.querySelector(\"#description\").value;\r\n                    \r\n                    // create photo object with image and other info\r\n                    app.database().ref('/posts').child(uuid).set({\r\n                        username: this.context.state.logged,\r\n                        time: firebase.database.ServerValue.TIMESTAMP,\r\n                        description: description,\r\n                        image: url,\r\n                        tags: this.state.tags.map((tag) => tag.id)\r\n                    }).then(() => {\r\n                        // update logged users last_update time\r\n                        app.database().ref(`/profile/${this.context.state.logged}/last_update`).set(firebase.database.ServerValue.TIMESTAMP)\r\n                        \r\n                        // then redirect to the actual photo post\r\n                        this.setState({redirect: true, uuid: uuid })\r\n                    })\r\n                })\r\n            })\r\n        } else {\r\n            alert(\"Select an image before submitting\")\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        if(this.state.redirect) {\r\n            let link = \"/p/\" + this.state.uuid\r\n            return <Redirect to={link}/>\r\n        } else {\r\n            return(\r\n                <div className=\"upload\">\r\n                    <div className=\"card\">\r\n                    <div className=\"card-header\">\r\n                        <p className=\"card-header-title is-centered\">\r\n                        Upload image\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"card-content\">\r\n                    <div className=\"file has-name is-centered\">\r\n                    <label className=\"file-label\">\r\n                        <input className=\"file-input\" type=\"file\" name=\"resume\" onChange={this.handleChange}/>\r\n                        <span className=\"file-cta\">\r\n                        <span className=\"file-icon\">\r\n                            <i className=\"fas fa-upload\"></i>\r\n                        </span>\r\n                        <span className=\"file-label\">\r\n                            Choose a file…\r\n                        </span>\r\n                        </span>\r\n                        <span className=\"file-name\">\r\n                        None\r\n                        </span>\r\n                    </label>\r\n                    </div><br/>\r\n                    <div>\r\n                    <img className=\"is-center is-rounded\" id=\"preview\" alt=\"\" src=\"\"/>\r\n                    </div><br/>\r\n\r\n                    <progress className=\"progress is-primary\" ref={(progress) => this.progress = progress} style={{display: this.state.progress === true ? 'block' : 'none' }} max=\"100\" ></progress>\r\n\r\n                    <ReactTags tags={this.state.tags}\r\n                        handleDelete={this.handleDelete}\r\n                        handleAddition={this.handleAddition}\r\n                        handleDrag={this.handleDrag}\r\n                        delimiters={[188, 13, 32]} />\r\n                    <br/>\r\n\r\n                    <textarea id=\"description\" className=\"textarea\" placeholder=\"Description\"></textarea><br/>\r\n                    <button className=\"button is-primary\" onClick={this.handleUpload}>Submit</button>   \r\n                </div>\r\n                </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nUpload.contextType = ContextUser;\r\n\r\nexport default Upload;","import React, { Component } from 'react';\r\nimport { app } from \"../../config/firebase_config\"\r\nimport { Redirect } from 'react-router-dom'\r\nimport ContextUser from '../../contextUser'\r\n\r\n// component for the login page\r\nclass Login extends Component {\r\n    static contextType = ContextUser;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            redirect: false\r\n        }\r\n    }\r\n\r\n\r\n\r\n    // handles login submission\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // sign in using fire base authentication service\r\n        app.auth().signInWithEmailAndPassword(this.email.value, this.pass.value).then((obj)=> {\r\n            // update auth states in root component\r\n            this.context.actions.updateAuthLogged(true, obj.user.displayName, obj.user.uid)\r\n        }).catch((error) => {\r\n            alert(error.message)\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        if(this.state.redirect) {\r\n            return <Redirect to=\"/\"/>\r\n        } else {\r\n            return(\r\n                <div className=\"login\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header\">\r\n                            <p className=\"card-header-title is-centered\">\r\n                            Login\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"card-content\">\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <input ref={(email) => this.email = email} className=\"input is-centered\" type=\"email\" placeholder=\"Email\" autoComplete=\"username\"></input>\r\n                            <br/><br/>\r\n                            <input ref={(pass) => this.pass = pass} className=\"input is-centered\" type=\"password\" placeholder=\"Password\" autoComplete=\"current-password\"></input>\r\n                            <br/><br/>\r\n                            <button type=\"submit\" className=\"button is-primary is-fullwidth\">Enter</button>\r\n                        </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nLogin.contextType = ContextUser;\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport { app } from \"../../config/firebase_config\"\r\nimport { Redirect } from 'react-router-dom'\r\nimport ContextUser from '../../contextUser'\r\n\r\nclass Register extends Component {\r\n    static contextType = ContextUser;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            registered: false,\r\n            selected_username: false,\r\n            redirect: false\r\n        }\r\n    }\r\n\r\n\r\n    \r\n    // updates logged state in root component\r\n    updateLogged = (user) => {\r\n        this.context.actions.updateLogged(user);\r\n        this.setState({redirect: true})                     \r\n    }\r\n\r\n\r\n\r\n    // handles registration submission\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const user = this.user.value\r\n\r\n        // check if username already exists\r\n        app.database().ref(`/profile/${user}`).once(\"value\", (snapshot) => {\r\n            if(snapshot.val()) {\r\n                alert(\"Username already exists. Try Again.\")\r\n            } else {\r\n                // create account with fire base authentication\r\n                app.auth().createUserWithEmailAndPassword(this.email.value, this.pass.value).then((obj)=> {\r\n                    app.database().ref('/profile').child(user).set({\r\n                        uid: obj.user.uid,\r\n                        description: \"No description\",\r\n                        followers_num: 0,\r\n                        following_num: 0\r\n                    }).then(() => {\r\n                        // update display name in firebase auth user object\r\n                        obj.user.updateProfile({\r\n                            displayName: user\r\n                        }).then(() => {\r\n                            // update authenticated user states in root component\r\n                            this.updateLogged(user)\r\n                        })\r\n                    })\r\n                    // create the user profile\r\n                    app.database().ref(`/profile/${user}/following`).push({\r\n                        username: user,\r\n                    })\r\n                }).catch((error) => {\r\n                    alert(error.message)\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    \r\n    render() {\r\n        if(this.state.redirect) {\r\n            return <Redirect to=\"/\"/>\r\n        } else {\r\n            return(\r\n                <div className=\"register\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header\">\r\n                            <p className=\"card-header-title is-centered\">\r\n                            Register\r\n                            </p>\r\n                        </div>\r\n\r\n                        <div className=\"card-content\">\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <input ref={(email) => this.email = email} className=\"input is-centered\" type=\"email\" placeholder=\"Email\"></input>\r\n                            <br/><br/>\r\n                            <input ref={(user) => this.user = user} className=\"input is-centered\" type=\"text\" placeholder=\"Username\"></input>\r\n                            <br/><br/>\r\n                            <input ref={(pass) => this.pass = pass} className=\"input is-centered\" type=\"password\" placeholder=\"Password\"></input>\r\n                            <br/><br/>\r\n                            <button type=\"submit\" className=\"button is-primary is-fullwidth\">Enter</button>\r\n                        </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nRegister.contextType = ContextUser;\r\n\r\nexport default Register;","import React, { Component } from 'react';\r\nimport Post from '../post/post'\r\nimport { Redirect, Link } from 'react-router-dom'\r\nimport ContextUser from '../../contextUser'\r\n\r\n// container component for viewing a single picture\r\nclass View extends Component {\r\n    static contextType = ContextUser;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            redirect_loc: undefined,\r\n            redirect: false\r\n        }\r\n    }\r\n\r\n    // handles the redirection, passed as a callback to Post component\r\n    // Two redirections:\r\n    // 1) to the photo\r\n    // 2) to error page, if photo doesnt exist\r\n    updateRedirect = (bool, location) => {\r\n        this.setState({redirect: bool, redirect_loc: location})\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        if (this.state.redirect && this.state.redirect_loc == \"error\") {\r\n            return <Redirect to={`/error`}/>\r\n        } else if (this.state.redirect && this.state.redirect_loc == \"profile\") {\r\n            return <Redirect to={`/u/${this.context.state.logged}`}/>\r\n        } else {\r\n            return (\r\n            <div className=\"view\">\r\n                <Post updateRedirect={this.updateRedirect} post_id={this.props.match.params.id}/>\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nView.contextType = ContextUser;\r\n\r\n\r\nexport default View;","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\n// functional component for the errors page\r\nconst Error = () => {\r\n    return(\r\n        <div className=\"error\">\r\n            <section className=\"hero is-large is-primary\">\r\n            <div className=\"hero-body\">\r\n                <div className=\"container has-text-centered\">\r\n                <h1 className=\"title\">\r\n                    404 Error\r\n                </h1>\r\n                <h2 className=\"subtitle\">\r\n                    Unable to find requested content\r\n                </h2>\r\n                <Link to=\"/\"><button className=\"button is-light\">Home</button></Link>\r\n                </div>\r\n            </div>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error;","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\n// functional component for sidebar component in main page\r\nconst Results = (props) => {\r\n    // create Update elements from data passed as props\r\n    const resultslist = props.data.map((obj, index) => {\r\n        return (<tr key={index}>\r\n            <td>\r\n                <div className=\"media\">\r\n                    <figure className=\"image is-32x32\">\r\n                    <img src={obj.profile_pic} alt=\"\"/>\r\n                    </figure>\r\n                    <div className=\"media-right\">\r\n                        <Link to={`/u/${obj.username}`}>{obj.username}</Link>\r\n                    </div>\r\n                </div>\r\n            </td>\r\n            <td>\r\n                {obj.description}\r\n            </td>\r\n        </tr>)\r\n    })\r\n\r\n\r\n\r\n    return(\r\n        <div className=\"results\">\r\n            <div className=\"panel-block\" style={{padding: 0 + \"px\"}}>\r\n            <table className=\"table is-striped is-fullwidth\">\r\n                <tbody>\r\n                {props.data == 0 && (\r\n                    <tr><td className=\"has-text-centered\">There are no results</td></tr>)\r\n                }\r\n                {resultslist}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Results;","import React, { Component } from 'react';\r\nimport Results from './results'\r\nimport {app} from \"../../config/firebase_config\"\r\n\r\n\r\n//component for the profile page\r\nclass Search extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            redirect: false,\r\n            data: [],\r\n            query: this.props.match.params.q,\r\n            loading: true\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.match.params.q !== this.props.match.params.q) {\r\n            this.setState({data: [], query: this.props.match.params.q}, this.check())\r\n        }\r\n    }\r\n\r\n    check = () => {\r\n        app.database().ref(`/profile/${this.props.match.params.q}`).once(\"value\", (snapshot) => {\r\n            if(snapshot.val()) {    \r\n                let profile_pic = \"https://firebasestorage.googleapis.com/v0/b/react-social-network-7e88b.appspot.com/o/assets%2Fdefault.png?alt=media\"\r\n                    \r\n                if(snapshot.val().picture) {\r\n                    profile_pic = snapshot.val().picture\r\n                }\r\n\r\n                let value = {\r\n                    profile_pic: profile_pic ,\r\n                    username: snapshot.key,\r\n                    description: snapshot.val().description\r\n                }\r\n\r\n                this.setState({data: [...this.state.data, value]})\r\n            } \r\n        })\r\n\r\n        // now component can be loaded\r\n        this.setState({loading: false}) \r\n    }\r\n\r\n    componentWillMount = () => {\r\n        this.check()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"upload\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-header\">\r\n                        <p className=\"card-header-title is-centered\">\r\n                        Search\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"card-content\">\r\n\r\n                    { this.state.loading ? \r\n                        (<span>Loading...</span>) : \r\n                        (<Results data={this.state.data}/>)\r\n                    }\r\n                    </div>\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Search","import React, { Component } from 'react';\r\nimport { app } from \"../../config/firebase_config\"\r\nimport { Redirect } from 'react-router-dom'\r\nimport ContextUser from '../../contextUser'\r\n\r\n// component for the settings page\r\nclass Settings extends Component {\r\n    static contextType = ContextUser;\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            profile_pic: undefined,\r\n            bio: undefined,\r\n            file: null,\r\n            redirect: false,\r\n            progress: false\r\n        }\r\n    }\r\n\r\n\r\n    \r\n    // Called immediately before mounting occurs, and before Component#render\r\n    componentWillMount = () => {\r\n        // retrieve their info\r\n        app.database().ref(`/profile/${this.context.state.logged}`).once(\"value\", (snapshot) => {\r\n            if(snapshot.val()) {\r\n                if(snapshot.val().picture) {\r\n                    this.setState({profile_pic: snapshot.val().picture})\r\n                } else {\r\n                    this.setState({profile_pic: \"https://firebasestorage.googleapis.com/v0/b/react-social-network-7e88b.appspot.com/o/assets%2Fdefault.png?alt=media\"})\r\n                }\r\n                this.setState({bio: snapshot.val().description})\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n\r\n    // handles file upload submission\r\n    handleUpload = (e) => {\r\n        if(this.state.file) {\r\n            let upload_task = app.storage().ref(`/profile/${this.context.state.logged}/profile`).put(this.state.file)\r\n\r\n            // set progress to true to make progress bar appear\r\n            this.setState({progress: true})\r\n\r\n            // listener for upload progress\r\n            upload_task.on('state_changed', (snapshot) => {\r\n                // update progress value through reference\r\n                this.progress.value = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n            },(error) => {\r\n                console.log(error)\r\n            }, () => {\r\n\r\n                // update profile picture\r\n                app.storage().ref(`profile/${this.context.state.logged}`).child(\"profile\").getDownloadURL().then((url) => {\r\n                    app.database().ref(`/profile/${this.context.state.logged}/picture`).set(url).then(()=>{\r\n                         // hide process since its done\r\n                        this.setState({profile_pic: url})\r\n                        this.setState({progress: false})\r\n                        alert(\"Profile picture changed!\")\r\n                    })\r\n                })\r\n            })\r\n        } else {\r\n            alert(\"Select an image before submitting\")\r\n        }\r\n    }\r\n\r\n    // handles file upload selection\r\n    handleUploadChange = (e) => {\r\n        // if a file was selected\r\n        if(e.target.files) {\r\n            let type = e.target.files[0].type\r\n\r\n            // only accept files that are images\r\n            if (type.includes(\"image\")) {\r\n                let name = e.target.files[0].name\r\n                this.setState({file: e.target.files[0]})\r\n\r\n                var reader = new FileReader();\r\n\r\n                // once loaded, change profile pic \r\n                reader.onload = (e) => {\r\n                    this.setState({pic_changed: true})\r\n                    this.setState({profile_pic: e.target.result})\r\n\r\n                    document.querySelector(\".file-name\").innerText = name\r\n                };\r\n                reader.readAsDataURL(e.target.files[0]);\r\n\r\n            } else {\r\n                alert(\"File must be a picture. Try again\")\r\n            }\r\n        }\r\n    }\r\n    \r\n    // handles any changes to the bio\r\n    handleBioChange= (e) => {\r\n        this.setState({bio: e.target.value});\r\n    }\r\n\r\n    // handles the saving of the bio\r\n    handleBioSave = (e) => {\r\n        app.database().ref(`/profile/${this.context.state.logged}/description`).set(this.state.bio).then(() => {\r\n            alert(\"Bio was changed!\")\r\n        }).catch((error) => {\r\n            alert(error)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if(this.state.redirect) {\r\n            let link = \"/p/\" + this.state.uuid\r\n            return <Redirect to={link}/>\r\n        } else {\r\n            return(\r\n                <div className=\"upload\">\r\n                    <div className=\"card\">\r\n                    <div className=\"card-header\">\r\n                        <p className=\"card-header-title is-centered\">\r\n                        Settings\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"card-content\">\r\n                    <label className='label'>Profile: </label>\r\n                    <article className=\"media\">\r\n                        <figure className=\"media-left\" ref={(profile) => this.profile = profile}>\r\n                            <p className=\"image is-128x128\">\r\n                            <img src={this.state.profile_pic}/>\r\n                            </p>\r\n                        </figure>\r\n                        <div className=\"media-content\">\r\n                            <div className=\"content\">\r\n                                <div className=\"file has-name\">\r\n                            <label className=\"file-label\">\r\n                                <input className=\"file-input\" type=\"file\" name=\"resume\" onChange={this.handleUploadChange}/>\r\n                                <span className=\"file-cta\">\r\n                                <span className=\"file-icon\">\r\n                                    <i className=\"fas fa-upload\"></i>\r\n                                </span>\r\n                                <span className=\"file-label\">\r\n                                    Choose a file…\r\n                                </span>\r\n                                </span>\r\n                                <span className=\"file-name\">\r\n                                None\r\n                                </span>\r\n                            </label>\r\n                            </div>\r\n                            <br/>\r\n                                <button className=\"button is-primary\" onClick={this.handleUpload}>Save Photo</button>   \r\n                            </div>\r\n                        </div>\r\n                    </article>\r\n\r\n                    <progress className=\"progress is-primary\" ref={(progress) => this.progress = progress} style={{display: this.state.progress === true ? 'block' : 'none' }} max=\"100\" ></progress>\r\n                    <hr/><br/>\r\n                    <label className='label'>Biography: </label>\r\n                    <textarea id=\"description\" className=\"textarea\" placeholder=\"Enter bio\" value={this.state.bio} onChange={this.handleBioChange}></textarea><br/>\r\n                    <button className=\"button is-primary\" onClick={this.handleBioSave}>Save Bio</button>   \r\n                </div>\r\n                </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Settings;","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\n// renders route and passes along props, used to redirect unauthenticated users to login\r\nexport default function PrivateRoute({component: Component, authenticated, ...rest}) {\r\n    return (\r\n        <Route  {...rest} \r\n        render={ props => authenticated === true ? (<Component {...props} {...rest} />) : (<Redirect to=\"/login\" />)}\r\n        />\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport {app} from \"./config/firebase_config\"\r\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom'\r\nimport Navigation from './components/navigation'\r\nimport Profile from './components/profile/profile'\r\nimport Main from './components/main/main'\r\nimport Upload from './components/upload/upload'\r\nimport Login from './components/auth/login'\r\nimport Register from './components/auth/register'\r\nimport View from './components/view/view'\r\nimport Error from './components/error'\r\nimport Search from './components/search/search'\r\n\r\nimport Settings from './components/settings/settings'\r\nimport PrivateRoute from './components/auth/privateRoute'\r\nimport ContextUser from './contextUser'\r\n\r\nimport './App.css'\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            logged: null,\r\n            uid: null,\r\n            authenticated: false,\r\n            loading: true,\r\n        }\r\n    }\r\n\r\n    // Called immediately before mounting occurs, and before Component#render\r\n    componentWillMount = () => {\r\n        fetch('/api/test')\r\n        .then(res => res.json())\r\n        .then(test => console.log(test))\r\n        .catch(() => console.log(\"Express backend not working\"))\r\n\r\n        // check if authentication changed\r\n        app.auth().onAuthStateChanged(authUser => {\r\n            if(authUser) {\r\n                this.setState({\r\n                logged: authUser.displayName,\r\n                uid: authUser.uid,\r\n                authenticated: true,\r\n                loading: false\r\n                }) \r\n            } else {\r\n                this.setState({\r\n                logged: null,\r\n                authenticated: false,\r\n                loading: false,\r\n                uid: null\r\n                }) \r\n            }\r\n        \r\n        })\r\n    }\r\n\r\n\r\n    // callback for updating auth\r\n    updateAuth = (bool) => {\r\n        this.setState({authenticated: bool})\r\n    }\r\n\r\n\r\n    // callback for updated logged user\r\n    updateLogged = (user) => {\r\n        this.setState({logged: user})\r\n    }\r\n\r\n\r\n    // callback for updating both auth and logged\r\n    updateAuthLogged = (bool, user, uid) => {\r\n        this.setState({\r\n        authenticated: bool,\r\n        logged: user,\r\n        uid: uid\r\n        })\r\n    }\r\n\r\n\r\n\r\n  render() {\r\n    const {logged, authenticated, uid, loading} = this.state\r\n    \r\n    if(loading) {\r\n      return null;\r\n    }\r\n\r\n    return(\r\n        <div className=\"App\">\r\n            <ContextUser.Provider value={{\r\n                state: { logged: logged, authenticated: authenticated, uid: uid },\r\n                actions: { updateLogged: this.updateLogged, updateAuth: this.updateAuth, updateAuthLogged: this.updateAuthLogged }\r\n            }}>\r\n                <Navigation/>\r\n                <Switch>\r\n                    <PrivateRoute exact path=\"/\" component={Main} authenticated={authenticated}/>\r\n                    <PrivateRoute exact path=\"/upload\" component={Upload} authenticated={authenticated}/>\r\n                    <PrivateRoute exact path=\"/settings\" component={Settings} authenticated={authenticated}/>\r\n                    \r\n                    <Route path=\"/login\" render={()=> (authenticated ? <Redirect to=\"/\"/> : <Login />)} exact/>\r\n                    <Route path=\"/register\" render={()=> (authenticated ? <Redirect to=\"/\"/> : <Register />)} exact/>\r\n                    <Route path=\"/u/:username\" render={(props)=><Profile {...props} />} exact/>\r\n                    <Route path=\"/p/:id\" render={(props)=><View {...props} />} exact/>\r\n                    <Route path=\"/search/:q\" render={(props) =><Search {...props} />} exact/>\r\n                    <Route path=\"*\" component={Error}/>\r\n                </Switch>\r\n            </ContextUser.Provider>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>\r\n, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}